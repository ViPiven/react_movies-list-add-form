{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleSubmit","event","preventDefault","newMovie","props","addMovie","setState","onSubmit","this","type","placeholder","value","onChange","target","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"4xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,UCtBGK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAW,CACfpB,MAAO,EAAKgB,MAAMhB,MAClBC,YAAa,EAAKe,MAAMf,YACxBC,OAAQ,EAAKc,MAAMd,OACnBC,QAAS,EAAKa,MAAMb,QACpBW,OAAQ,EAAKE,MAAMF,QAGrB,EAAKO,MAAMC,SAASF,GACpB,EAAKG,SAAS,CACZvB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAzBd,4CA6BE,WAAU,IAAD,OACP,OACE,0BAAMU,SAAUC,KAAKR,aAAcb,UAAU,cAC3C,2BACEsB,KAAK,OACLC,YAAY,QACZC,MAAOH,KAAKT,MAAMhB,MAClB6B,SAAU,SAACX,GACT,EAAKK,SAAS,CACZvB,MAAOkB,EAAMY,OAAOF,WAI1B,2BACEF,KAAK,OACLC,YAAY,cACZC,MAAOH,KAAKT,MAAMf,YAClB4B,SAAU,SAACX,GACT,EAAKK,SAAS,CACZtB,YAAaiB,EAAMY,OAAOF,WAIhC,2BACEF,KAAK,MACLC,YAAY,SACZC,MAAOH,KAAKT,MAAMd,OAClB2B,SAAU,SAACX,GACT,EAAKK,SAAS,CACZrB,OAAQgB,EAAMY,OAAOF,WAI3B,2BACEF,KAAK,MACLC,YAAY,UACZC,MAAOH,KAAKT,MAAMb,QAClB0B,SAAU,SAACX,GACT,EAAKK,SAAS,CACZpB,QAASe,EAAMY,OAAOF,WAI5B,2BACEF,KAAK,OACLC,YAAY,SACZC,MAAOH,KAAKT,MAAMF,OAClBe,SAAU,SAACX,GACT,EAAKK,SAAS,CACZT,OAAQI,EAAMY,OAAOF,WAI3B,4BAAQF,KAAK,UAAb,kBAlFR,GAA8BK,a,OCEjBC,EAAb,4MACEhB,MAAQ,CACNN,OAAQuB,GAFZ,EAKEX,SAAW,SAACV,GACV,EAAKW,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWe,KAAKT,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUkB,SAAUG,KAAKH,iBApBnC,GAAyBS,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.61c273cc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newMovie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    this.props.addMovie(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"submitForm\">\n        <input\n          type=\"text\"\n          placeholder=\"title\"\n          value={this.state.title}\n          onChange={(event) => {\n            this.setState({\n              title: event.target.value,\n            });\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"description\"\n          value={this.state.description}\n          onChange={(event) => {\n            this.setState({\n              description: event.target.value,\n            });\n          }}\n        />\n        <input\n          type=\"url\"\n          placeholder=\"imgUrl\"\n          value={this.state.imgUrl}\n          onChange={(event) => {\n            this.setState({\n              imgUrl: event.target.value,\n            });\n          }}\n        />\n        <input\n          type=\"url\"\n          placeholder=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={(event) => {\n            this.setState({\n              imdbUrl: event.target.value,\n            });\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"imdbId\"\n          value={this.state.imdbId}\n          onChange={(event) => {\n            this.setState({\n              imdbId: event.target.value,\n            });\n          }}\n        />\n        <button type=\"submit\">\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}